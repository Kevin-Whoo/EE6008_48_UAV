#!/bin/bash
#PBS -N EE6008_overfit 
# Job name
#PBS -l select=2:ncpus=16:ngpus=4:mem=64GB  
# Request 16 CPUs, 8 GPUs, 64GB RAM
#PBS -l walltime=36:00:00  
# Max runtime of 12 hours
#PBS -q normal
# Submit to normal queue
#PBS -P personal-khu005  
# Your project ID
#PBS -j oe  
# Join STDOUT and STDERR into one file
#PBS -o khu005_train_yolo11x_overfit_out.txt
# Load necessary modules
module load miniforge3

# Change to job submission directory
cd $PBS_O_WORKDIR || exit $?

# Activate virtual environment (if using Conda or venv)
conda activate EE6008

# Train YOLO on 2 GPUs
yolo detect train \
  model=/home/users/ntu/khu005/scratch/project/yolo11x/runs/detect/train_yolo11x_first_fully/weights/last.pt \
  imgsz=1024 batch=64 epochs=800 device=0,1,2,3 \
  data=VisDrone.yaml \
  optimizer=AdamW lr0=0.01 lrf=0.01 weight_decay=0.0005 \
  patience=20 cos_lr=True amp=True \
  augment=True mosaic=1.0 hsv_h=0.015 hsv_s=0.7 hsv_v=0.4 \
  translate=0.1 scale=0.5 fliplr=0.5 workers=8 \

# Alternative for PyTorch YOLO:
# python -m ultralytics train model=yolov8n.pt data=dataset.yaml epochs=100 device=0,1

